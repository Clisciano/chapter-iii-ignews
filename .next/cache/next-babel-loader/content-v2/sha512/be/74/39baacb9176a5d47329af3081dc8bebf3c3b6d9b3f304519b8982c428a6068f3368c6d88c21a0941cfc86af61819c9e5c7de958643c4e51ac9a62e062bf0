{"ast":null,"code":"import _regeneratorRuntime from \"/Users/citelsistema/Desktop/ignite-aulas/Reactjs/Chapter03/ignews/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/Users/citelsistema/Desktop/ignite-aulas/Reactjs/Chapter03/ignews/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/citelsistema/Desktop/ignite-aulas/Reactjs/Chapter03/ignews/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/citelsistema/Desktop/ignite-aulas/Reactjs/Chapter03/ignews/src/components/SubscribeButton/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { signIn, useSession } from 'next-auth/client';\nimport { api } from '../../services/api';\nimport { getStripeJs } from '../../services/stripe-js';\nimport styles from './styles.module.scss';\nexport function SubscribeButton(_ref) {\n  _s();\n\n  var priceId = _ref.priceId;\n\n  var _useSession = useSession(),\n      _useSession2 = _slicedToArray(_useSession, 1),\n      session = _useSession2[0];\n\n  function handleSubscribe() {\n    return _handleSubscribe.apply(this, arguments);\n  }\n\n  function _handleSubscribe() {\n    _handleSubscribe = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, sessionId, stripe;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (session) {\n                _context.next = 3;\n                break;\n              }\n\n              signIn('github');\n              return _context.abrupt(\"return\");\n\n            case 3:\n              _context.prev = 3;\n              _context.next = 6;\n              return api.post('/subscribe');\n\n            case 6:\n              response = _context.sent;\n              sessionId = response.data.sessionId;\n              _context.next = 10;\n              return getStripeJs();\n\n            case 10:\n              stripe = _context.sent;\n              _context.next = 13;\n              return stripe.redirectToCheckout(sessionId);\n\n            case 13:\n              _context.next = 18;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](3);\n              alert(_context.t0.message);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 15]]);\n    }));\n    return _handleSubscribe.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: styles.subscribeButton,\n    children: \"Subscribe now\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SubscribeButton, \"Vxy5gMemEU/s8dbgarDyE2/t+kg=\", false, function () {\n  return [useSession];\n});\n\n_c = SubscribeButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubscribeButton\");","map":{"version":3,"sources":["/Users/citelsistema/Desktop/ignite-aulas/Reactjs/Chapter03/ignews/src/components/SubscribeButton/index.tsx"],"names":["signIn","useSession","api","getStripeJs","styles","SubscribeButton","priceId","session","handleSubscribe","post","response","sessionId","data","stripe","redirectToCheckout","alert","message","subscribeButton"],"mappings":";;;;;;;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,QAAmC,kBAAnC;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAMA,OAAO,SAASC,eAAT,OAA6D;AAAA;;AAAA,MAAjCC,OAAiC,QAAjCA,OAAiC;;AAAA,oBAChDL,UAAU,EADsC;AAAA;AAAA,MAC3DM,OAD2D;;AAAA,WAGnDC,eAHmD;AAAA;AAAA;;AAAA;AAAA,gFAGlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACMD,OADN;AAAA;AAAA;AAAA;;AAEIP,cAAAA,MAAM,CAAC,QAAD,CAAN;AAFJ;;AAAA;AAAA;AAAA;AAAA,qBAO2BE,GAAG,CAACO,IAAJ,CAAS,YAAT,CAP3B;;AAAA;AAOUC,cAAAA,QAPV;AASYC,cAAAA,SATZ,GAS0BD,QAAQ,CAACE,IATnC,CASYD,SATZ;AAAA;AAAA,qBAWyBR,WAAW,EAXpC;;AAAA;AAWUU,cAAAA,MAXV;AAAA;AAAA,qBAaUA,MAAM,CAACC,kBAAP,CAA0BH,SAA1B,CAbV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAeII,cAAAA,KAAK,CAAC,YAAIC,OAAL,CAAL;;AAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHkE;AAAA;AAAA;;AAsBlE,sBACE;AACC,IAAA,SAAS,EAAEZ,MAAM,CAACa,eADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA5BeZ,e;UACIJ,U;;;KADJI,e","sourcesContent":["import { signIn, useSession } from 'next-auth/client';\nimport { api } from '../../services/api';\nimport { getStripeJs } from '../../services/stripe-js';\nimport styles from './styles.module.scss';\n\ninterface SubscribeButtonProps {\n  priceId: string;\n}\n\nexport function SubscribeButton ({ priceId }: SubscribeButtonProps) {\n  const [session] = useSession();\n\n  async function handleSubscribe() {\n    if(!session) {\n      signIn('github');\n      return;\n    }\n\n    try {\n      const response = await api.post('/subscribe')\n      \n      const { sessionId } = response.data;\n\n      const stripe = await getStripeJs()\n\n      await stripe.redirectToCheckout(sessionId)\n    } catch (err) {\n      alert(err.message);\n    }\n  }\n\n  return (\n    <button\n     className={styles.subscribeButton}>\n       Subscribe now\n    </button>\n  );\n}"]},"metadata":{},"sourceType":"module"}