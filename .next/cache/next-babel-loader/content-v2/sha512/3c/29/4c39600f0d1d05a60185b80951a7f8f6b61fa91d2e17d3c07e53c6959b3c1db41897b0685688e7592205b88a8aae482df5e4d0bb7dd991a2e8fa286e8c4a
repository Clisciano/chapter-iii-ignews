{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/citelsistema/Desktop/ignite-aulas/Reactjs/Chapter03/ignews/src/pages/posts/[slug].tsx\";\nimport { getSession } from \"next-auth/client\";\nimport { RichText } from \"prismic-dom\";\nimport { getPrismicClient } from \"../../services/prismic\";\nimport { parseISO, format } from 'date-fns';\nimport pt from 'date-fns/locale/pt';\nimport Head from \"next/head\";\nimport styles from './post.module.scss';\nexport default function Post({\n  post\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [post.title, \" | Ignews\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"article\", {\n        className: styles.post,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n          children: post.pdatedAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.postContent,\n          dangerouslySetInnerHTML: {\n            __html: post.content\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\nexport const getServerSideProps = async ({\n  req,\n  params\n}) => {\n  const session = await getSession({\n    req\n  });\n  const {\n    slug\n  } = params;\n  console.log(session); // if (!session) {\n  // }\n\n  const prismic = getPrismicClient(req);\n  const response = await prismic.getByUID('post', String(slug), {});\n  const post = {\n    slug,\n    title: RichText.asText(response.data.title),\n    content: RichText.asHtml(response.data.content),\n    pdatedAt: format(parseISO(response.data.last_publication_date), \"dd 'de' MMMM 'de' yyyy\", {\n      locale: pt\n    })\n  };\n  return {\n    props: {\n      post\n    }\n  };\n};","map":{"version":3,"sources":["/Users/citelsistema/Desktop/ignite-aulas/Reactjs/Chapter03/ignews/src/pages/posts/[slug].tsx"],"names":["getSession","RichText","getPrismicClient","parseISO","format","pt","Head","styles","Post","post","title","container","pdatedAt","postContent","__html","content","getServerSideProps","req","params","session","slug","console","log","prismic","response","getByUID","String","asText","data","asHtml","last_publication_date","locale","props"],"mappings":";;;AACA,SAASA,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AAEA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,UAAjC;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AAWA,eAAe,SAASC,IAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAAoC;AACjD,sBACE;AAAA,4BACA,QAAC,IAAD;AAAA,6BACE;AAAA,mBAAQA,IAAI,CAACC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA,eAKA;AAAM,MAAA,SAAS,EAAEH,MAAM,CAACI,SAAxB;AAAA,6BACE;AAAS,QAAA,SAAS,EAAEJ,MAAM,CAACE,IAA3B;AAAA,gCACE;AAAA,oBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOD,IAAI,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AACE,UAAA,SAAS,EAAEL,MAAM,CAACM,WADpB;AAEE,UAAA,uBAAuB,EAAE;AAAEC,YAAAA,MAAM,EAAEL,IAAI,CAACM;AAAf;AAF3B;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALA;AAAA,kBADF;AAiBD;AAED,OAAO,MAAMC,kBAAsC,GAAG,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAP,KAA2B;AAC/E,QAAMC,OAAO,GAAG,MAAMnB,UAAU,CAAC;AAACiB,IAAAA;AAAD,GAAD,CAAhC;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAWF,MAAjB;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAJ+E,CAK/E;AAEA;;AAEA,QAAMI,OAAO,GAAGrB,gBAAgB,CAACe,GAAD,CAAhC;AAEA,QAAMO,QAAQ,GAAG,MAAMD,OAAO,CAACE,QAAR,CAAiB,MAAjB,EAAyBC,MAAM,CAACN,IAAD,CAA/B,EAAuC,EAAvC,CAAvB;AAEA,QAAMX,IAAI,GAAG;AACXW,IAAAA,IADW;AAEXV,IAAAA,KAAK,EAAET,QAAQ,CAAC0B,MAAT,CAAgBH,QAAQ,CAACI,IAAT,CAAclB,KAA9B,CAFI;AAGXK,IAAAA,OAAO,EAAEd,QAAQ,CAAC4B,MAAT,CAAgBL,QAAQ,CAACI,IAAT,CAAcb,OAA9B,CAHE;AAIXH,IAAAA,QAAQ,EAAER,MAAM,CACdD,QAAQ,CAACqB,QAAQ,CAACI,IAAT,CAAcE,qBAAf,CADM,EAEd,wBAFc,EAGd;AAAEC,MAAAA,MAAM,EAAE1B;AAAV,KAHc;AAJL,GAAb;AAWA,SAAO;AACL2B,IAAAA,KAAK,EAAE;AACLvB,MAAAA;AADK;AADF,GAAP;AAMD,CA9BM","sourcesContent":["import { GetServerSideProps } from \"next\";\nimport { getSession } from \"next-auth/client\";\nimport { RichText } from \"prismic-dom\";\nimport { getPrismicClient } from \"../../services/prismic\";\n\nimport { parseISO, format } from 'date-fns';\nimport pt from 'date-fns/locale/pt';\nimport Head from \"next/head\";\n\nimport styles from './post.module.scss'\n\ninterface PostProps {\n  post: {\n    slug: string;\n    title: string;\n    content: string;\n    pdatedAt: string;\n  }  \n}\n\nexport default function Post( { post }: PostProps) {\n  return(\n    <>\n    <Head>\n      <title>{post.title} | Ignews</title>      \n    </Head>\n\n    <main className={styles.container}>\n      <article className={styles.post}>\n        <h1>{post.title}</h1>\n        <time>{post.pdatedAt}</time>\n        <div \n          className={styles.postContent}\n          dangerouslySetInnerHTML={{ __html: post.content }} />\n      </article>\n    </main>\n    </>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = async ({ req, params }) => {\n  const session = await getSession({req});\n  const { slug } = params;\n\n  console.log(session);\n  // if (!session) {\n\n  // }\n\n  const prismic = getPrismicClient(req);\n\n  const response = await prismic.getByUID('post', String(slug), {})\n\n  const post = {\n    slug,\n    title: RichText.asText(response.data.title),\n    content: RichText.asHtml(response.data.content),\n    pdatedAt: format(\n      parseISO(response.data.last_publication_date), \n      \"dd 'de' MMMM 'de' yyyy\", \n      { locale: pt }\n    ) \n  };\n\n  return {\n    props: {\n      post,\n    }\n  }\n\n}"]},"metadata":{},"sourceType":"module"}